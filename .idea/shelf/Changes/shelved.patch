Index: config/packages/security.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>security:\r\n    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords\r\n    password_hashers:\r\n        Symfony\\Component\\Security\\Core\\User\\PasswordAuthenticatedUserInterface: 'auto'\r\n    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider\r\n    providers:\r\n        # used to reload user from session & other features (e.g. switch_user)\r\n        app_user_provider:\r\n            entity:\r\n                class: App\\Entity\\User\r\n                property: username\r\n    firewalls:\r\n        dev:\r\n            pattern: ^/(_(profiler|wdt)|css|images|js)/\r\n            security: false\r\n        main:\r\n            lazy: true\r\n            provider: app_user_provider\r\n\r\n            # activate different ways to authenticate\r\n            # https://symfony.com/doc/current/security.html#the-firewall\r\n\r\n            # https://symfony.com/doc/current/security/impersonating_user.html\r\n            # switch_user: true\r\n\r\n    # Easy way to control access for large sections of your site\r\n    # Note: Only the *first* access control that matches will be used\r\n    access_control:\r\n        # - { path: ^/admin, roles: ROLE_ADMIN }\r\n        # - { path: ^/profile, roles: ROLE_USER }\r\n\r\nwhen@test:\r\n    security:\r\n        password_hashers:\r\n            # By default, password hashers are resource intensive and take time. This is\r\n            # important to generate secure password hashes. In tests however, secure hashes\r\n            # are not important, waste resources and increase test times. The following\r\n            # reduces the work factor to the lowest possible values.\r\n            Symfony\\Component\\Security\\Core\\User\\PasswordAuthenticatedUserInterface:\r\n                algorithm: auto\r\n                cost: 4 # Lowest possible value for bcrypt\r\n                time_cost: 3 # Lowest possible value for argon\r\n                memory_cost: 10 # Lowest possible value for argon\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/packages/security.yaml b/config/packages/security.yaml
--- a/config/packages/security.yaml	(revision 84060ddc08e4bc1a179f1b8cde5b6d3e4fb9e2ae)
+++ b/config/packages/security.yaml	(date 1713133936256)
@@ -1,43 +1,39 @@
+# security.yaml
+
 security:
-    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
-    password_hashers:
-        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
-    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
-    providers:
-        # used to reload user from session & other features (e.g. switch_user)
-        app_user_provider:
-            entity:
-                class: App\Entity\User
-                property: username
-    firewalls:
-        dev:
-            pattern: ^/(_(profiler|wdt)|css|images|js)/
-            security: false
-        main:
-            lazy: true
-            provider: app_user_provider
-
-            # activate different ways to authenticate
-            # https://symfony.com/doc/current/security.html#the-firewall
+  # Configuration des hachages de mots de passe
+  password_hashers:
+    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
+
+  # Configuration des fournisseurs de sécurité
+  providers:
+    app_user_provider:
+      entity:
+        class: App\Entity\User
+        property: username
+
+  # Configuration des pare-feux
+  firewalls:
+    dev:
+      pattern: ^/(_(profiler|wdt)|css|images|js)/
+      security: false
+    main:
+      lazy: true
+      provider: app_user_provider
+      form_login:
+        # Redirection après la connexion
+        default_target_path: 'app_accueil'
 
-            # https://symfony.com/doc/current/security/impersonating_user.html
-            # switch_user: true
-
-    # Easy way to control access for large sections of your site
-    # Note: Only the *first* access control that matches will be used
-    access_control:
-        # - { path: ^/admin, roles: ROLE_ADMIN }
-        # - { path: ^/profile, roles: ROLE_USER }
+  # Contrôle d'accès
+  access_control:
+  # Définissez vos règles de contrôle d'accès ici
 
+# Configuration spécifique aux tests
 when@test:
-    security:
-        password_hashers:
-            # By default, password hashers are resource intensive and take time. This is
-            # important to generate secure password hashes. In tests however, secure hashes
-            # are not important, waste resources and increase test times. The following
-            # reduces the work factor to the lowest possible values.
-            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
-                algorithm: auto
-                cost: 4 # Lowest possible value for bcrypt
-                time_cost: 3 # Lowest possible value for argon
-                memory_cost: 10 # Lowest possible value for argon
+  security:
+    password_hashers:
+      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
+        algorithm: auto
+        cost: 4
+        time_cost: 3
+        memory_cost: 10
Index: config/routes.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>controllers:\r\n    resource:\r\n        path: ../src/Controller/\r\n        namespace: App\\Controller\r\n    type: attribute\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/routes.yaml b/config/routes.yaml
--- a/config/routes.yaml	(revision 84060ddc08e4bc1a179f1b8cde5b6d3e4fb9e2ae)
+++ b/config/routes.yaml	(date 1713135248149)
@@ -1,5 +1,5 @@
-controllers:
-    resource:
-        path: ../src/Controller/
-        namespace: App\Controller
-    type: attribute
+# routes.yaml
+
+app_login:
+    path: /login
+    controller: App\Controller\LoginController::login
Index: src/Entity/Offre.php
===================================================================
diff --git a/src/Entity/Offre.php b/src/Entity/Offre.php
deleted file mode 100644
--- a/src/Entity/Offre.php	(revision 84060ddc08e4bc1a179f1b8cde5b6d3e4fb9e2ae)
+++ /dev/null	(revision 84060ddc08e4bc1a179f1b8cde5b6d3e4fb9e2ae)
@@ -1,157 +0,0 @@
-<?php
-
-namespace App\Entity;
-
-use App\Repository\OffreRepository;
-use Doctrine\DBAL\Types\Types;
-use Doctrine\ORM\Mapping as ORM;
-
-#[ORM\Entity(repositoryClass: OffreRepository::class)]
-class Offre
-{
-    #[ORM\Id]
-    #[ORM\GeneratedValue]
-    #[ORM\Column]
-    private ?int $id = null;
-
-    #[ORM\Column(length: 255)]
-    private ?string $nomEntreprise = null;
-
-    #[ORM\Column(length: 255)]
-    private ?string $nomOffre = null;
-
-    #[ORM\Column(length: 255)]
-    private ?string $Description = null;
-
-    #[ORM\Column(length: 100, nullable: true)]
-    private ?string $email = null;
-
-    #[ORM\Column(length: 100)]
-    private ?string $telephone = null;
-
-    #[ORM\Column(type: Types::DATE_MUTABLE)]
-    private ?\DateTimeInterface $dateDebut = null;
-
-    #[ORM\Column(type: Types::DATE_MUTABLE)]
-    private ?\DateTimeInterface $dateLimite = null;
-
-    #[ORM\OneToOne(cascade: ['persist', 'remove'])]
-    #[ORM\JoinColumn(nullable: false)]
-    private ?TypeOffre $fk_typeOffre = null;
-
-    #[ORM\Column(length: 255, nullable: true)]
-    private ?string $image = null;
-
-    public function getId(): ?int
-    {
-        return $this->id;
-    }
-
-    public function getNomEntreprise(): ?string
-    {
-        return $this->nomEntreprise;
-    }
-
-    public function setNomEntreprise(string $nomEntreprise): static
-    {
-        $this->nomEntreprise = $nomEntreprise;
-
-        return $this;
-    }
-
-    public function getNomOffre(): ?string
-    {
-        return $this->nomOffre;
-    }
-
-    public function setNomOffre(string $nomOffre): static
-    {
-        $this->nomOffre = $nomOffre;
-
-        return $this;
-    }
-
-    public function getDescription(): ?string
-    {
-        return $this->Description;
-    }
-
-    public function setDescription(string $Description): static
-    {
-        $this->Description = $Description;
-
-        return $this;
-    }
-
-    public function getEmail(): ?string
-    {
-        return $this->email;
-    }
-
-    public function setEmail(?string $email): static
-    {
-        $this->email = $email;
-
-        return $this;
-    }
-
-    public function getTelephone(): ?string
-    {
-        return $this->telephone;
-    }
-
-    public function setTelephone(string $telephone): static
-    {
-        $this->telephone = $telephone;
-
-        return $this;
-    }
-
-    public function getDateDebut(): ?\DateTimeInterface
-    {
-        return $this->dateDebut;
-    }
-
-    public function setDateDebut(\DateTimeInterface $dateDebut): static
-    {
-        $this->dateDebut = $dateDebut;
-
-        return $this;
-    }
-
-    public function getDateLimite(): ?\DateTimeInterface
-    {
-        return $this->dateLimite;
-    }
-
-    public function setDateLimite(\DateTimeInterface $dateLimite): static
-    {
-        $this->dateLimite = $dateLimite;
-
-        return $this;
-    }
-
-    public function getFkTypeOffre(): ?TypeOffre
-    {
-        return $this->fk_typeOffre;
-    }
-
-    public function setFkTypeOffre(TypeOffre $fk_typeOffre): static
-    {
-        $this->fk_typeOffre = $fk_typeOffre;
-
-        return $this;
-    }
-
-    public function getImage(): ?string
-    {
-        return $this->image;
-    }
-
-    public function setImage(?string $image): static
-    {
-        $this->image = $image;
-
-        return $this;
-    }
-}
Index: src/Controller/OffreController.php
===================================================================
diff --git a/src/Controller/OffreController.php b/src/Controller/OffreController.php
deleted file mode 100644
--- a/src/Controller/OffreController.php	(revision 84060ddc08e4bc1a179f1b8cde5b6d3e4fb9e2ae)
+++ /dev/null	(revision 84060ddc08e4bc1a179f1b8cde5b6d3e4fb9e2ae)
@@ -1,81 +0,0 @@
-<?php
-
-namespace App\Controller;
-
-use App\Entity\Offre;
-use App\Form\OffreType;
-use App\Repository\OffreRepository;
-use Doctrine\ORM\EntityManagerInterface;
-use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
-use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpFoundation\Response;
-use Symfony\Component\Routing\Attribute\Route;
-
-#[Route('/offre')]
-class OffreController extends AbstractController
-{
-    #[Route('/', name: 'app_offre_index', methods: ['GET'])]
-    public function index(OffreRepository $offreRepository): Response
-    {
-        return $this->render('offre/index.html.twig', [
-            'offres' => $offreRepository->findAll(),
-        ]);
-    }
-
-    #[Route('/new', name: 'app_offre_new', methods: ['GET', 'POST'])]
-    public function new(Request $request, EntityManagerInterface $entityManager): Response
-    {
-        $offre = new Offre();
-        $form = $this->createForm(OffreType::class, $offre);
-        $form->handleRequest($request);
-
-        if ($form->isSubmitted() && $form->isValid()) {
-            $entityManager->persist($offre);
-            $entityManager->flush();
-
-            return $this->redirectToRoute('app_offre_index', [], Response::HTTP_SEE_OTHER);
-        }
-
-        return $this->render('offre/new.html.twig', [
-            'offre' => $offre,
-            'form' => $form,
-        ]);
-    }
-
-    #[Route('/{id}', name: 'app_offre_show', methods: ['GET'])]
-    public function show(Offre $offre): Response
-    {
-        return $this->render('offre/show.html.twig', [
-            'offre' => $offre,
-        ]);
-    }
-
-    #[Route('/{id}/edit', name: 'app_offre_edit', methods: ['GET', 'POST'])]
-    public function edit(Request $request, Offre $offre, EntityManagerInterface $entityManager): Response
-    {
-        $form = $this->createForm(OffreType::class, $offre);
-        $form->handleRequest($request);
-
-        if ($form->isSubmitted() && $form->isValid()) {
-            $entityManager->flush();
-
-            return $this->redirectToRoute('app_offre_index', [], Response::HTTP_SEE_OTHER);
-        }
-
-        return $this->render('offre/edit.html.twig', [
-            'offre' => $offre,
-            'form' => $form,
-        ]);
-    }
-
-    #[Route('/{id}', name: 'app_offre_delete', methods: ['POST'])]
-    public function delete(Request $request, Offre $offre, EntityManagerInterface $entityManager): Response
-    {
-        if ($this->isCsrfTokenValid('delete'.$offre->getId(), $request->getPayload()->get('_token'))) {
-            $entityManager->remove($offre);
-            $entityManager->flush();
-        }
-
-        return $this->redirectToRoute('app_offre_index', [], Response::HTTP_SEE_OTHER);
-    }
-}
Index: src/Repository/OffreRepository.php
===================================================================
diff --git a/src/Repository/OffreRepository.php b/src/Repository/OffreRepository.php
deleted file mode 100644
--- a/src/Repository/OffreRepository.php	(revision 84060ddc08e4bc1a179f1b8cde5b6d3e4fb9e2ae)
+++ /dev/null	(revision 84060ddc08e4bc1a179f1b8cde5b6d3e4fb9e2ae)
@@ -1,48 +0,0 @@
-<?php
-
-namespace App\Repository;
-
-use App\Entity\Offre;
-use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
-use Doctrine\Persistence\ManagerRegistry;
-
-/**
- * @extends ServiceEntityRepository<Offre>
- *
- * @method Offre|null find($id, $lockMode = null, $lockVersion = null)
- * @method Offre|null findOneBy(array $criteria, array $orderBy = null)
- * @method Offre[]    findAll()
- * @method Offre[]    findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
- */
-class OffreRepository extends ServiceEntityRepository
-{
-    public function __construct(ManagerRegistry $registry)
-    {
-        parent::__construct($registry, Offre::class);
-    }
-
-    //    /**
-    //     * @return Offre[] Returns an array of Offre objects
-    //     */
-    //    public function findByExampleField($value): array
-    //    {
-    //        return $this->createQueryBuilder('o')
-    //            ->andWhere('o.exampleField = :val')
-    //            ->setParameter('val', $value)
-    //            ->orderBy('o.id', 'ASC')
-    //            ->setMaxResults(10)
-    //            ->getQuery()
-    //            ->getResult()
-    //        ;
-    //    }
-
-    //    public function findOneBySomeField($value): ?Offre
-    //    {
-    //        return $this->createQueryBuilder('o')
-    //            ->andWhere('o.exampleField = :val')
-    //            ->setParameter('val', $value)
-    //            ->getQuery()
-    //            ->getOneOrNullResult()
-    //        ;
-    //    }
-}
Index: src/Form/OffreType.php
===================================================================
diff --git a/src/Form/OffreType.php b/src/Form/OffreType.php
deleted file mode 100644
--- a/src/Form/OffreType.php	(revision 84060ddc08e4bc1a179f1b8cde5b6d3e4fb9e2ae)
+++ /dev/null	(revision 84060ddc08e4bc1a179f1b8cde5b6d3e4fb9e2ae)
@@ -1,42 +0,0 @@
-<?php
-
-namespace App\Form;
-
-use App\Entity\Offre;
-use App\Entity\TypeOffre;
-use Symfony\Bridge\Doctrine\Form\Type\EntityType;
-use Symfony\Component\Form\AbstractType;
-use Symfony\Component\Form\FormBuilderInterface;
-use Symfony\Component\OptionsResolver\OptionsResolver;
-
-class OffreType extends AbstractType
-{
-    public function buildForm(FormBuilderInterface $builder, array $options): void
-    {
-        $builder
-            ->add('nomEntreprise')
-            ->add('nomOffre')
-            ->add('Description')
-            ->add('email')
-            ->add('telephone')
-            ->add('dateDebut', null, [
-                'widget' => 'single_text',
-            ])
-            ->add('dateLimite', null, [
-                'widget' => 'single_text',
-            ])
-            ->add('image')
-            ->add('fk_typeOffre', EntityType::class, [
-                'class' => TypeOffre::class,
-                'choice_label' => 'id',
-            ])
-        ;
-    }
-
-    public function configureOptions(OptionsResolver $resolver): void
-    {
-        $resolver->setDefaults([
-            'data_class' => Offre::class,
-        ]);
-    }
-}
Index: .idea/phpunit.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/phpunit.xml b/.idea/phpunit.xml
new file mode 100644
--- /dev/null	(date 1713131420285)
+++ b/.idea/phpunit.xml	(date 1713131420285)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="PHPUnit">
+    <option name="directories">
+      <list>
+        <option value="$PROJECT_DIR$/tests" />
+      </list>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: config/services.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># This file is the entry point to configure your own services.\r\n# Files in the packages/ subdirectory configure your dependencies.\r\n\r\n# Put parameters here that don't need to change on each machine where the app is deployed\r\n# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration\r\nparameters:\r\n\r\nservices:\r\n    # default configuration for services in *this* file\r\n    _defaults:\r\n        autowire: true      # Automatically injects dependencies in your services.\r\n        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.\r\n\r\n    # makes classes in src/ available to be used as services\r\n    # this creates a service per class whose id is the fully-qualified class name\r\n    App\\:\r\n        resource: '../src/'\r\n        exclude:\r\n            - '../src/DependencyInjection/'\r\n            - '../src/Entity/'\r\n            - '../src/Kernel.php'\r\n\r\n    # add more service definitions when explicit configuration is needed\r\n    # please note that last definitions always *replace* previous ones\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/services.yaml b/config/services.yaml
--- a/config/services.yaml	(revision 84060ddc08e4bc1a179f1b8cde5b6d3e4fb9e2ae)
+++ b/config/services.yaml	(date 1713132541233)
@@ -6,19 +6,25 @@
 parameters:
 
 services:
-    # default configuration for services in *this* file
-    _defaults:
-        autowire: true      # Automatically injects dependencies in your services.
-        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
+  # default configuration for services in *this* file
+  _defaults:
+    autowire: true      # Automatically injects dependencies in your services.
+    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
 
-    # makes classes in src/ available to be used as services
-    # this creates a service per class whose id is the fully-qualified class name
-    App\:
-        resource: '../src/'
-        exclude:
-            - '../src/DependencyInjection/'
-            - '../src/Entity/'
-            - '../src/Kernel.php'
+  # makes classes in src/ available to be used as services
+  # this creates a service per class whose id is the fully-qualified class name
+  App\:
+    resource: '../src/'
+    exclude:
+      - '../src/DependencyInjection/'
+      - '../src/Entity/'
+      - '../src/Kernel.php'
 
-    # add more service definitions when explicit configuration is needed
-    # please note that last definitions always *replace* previous ones
+  # add more service definitions when explicit configuration is needed
+  # please note that last definitions always *replace* previous ones
+
+  # Définition du service OffreEmploiNotificationService
+  App\Service\InsertionProfessionnelle\OffreEmploiNotificationService:
+    arguments:
+      $mailer: '@Symfony\Component\Mailer\MailerInterface'
+      $etudiantRepository: '@App\Repository\EtudiantRepository'
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1713130712800)
+++ b/.idea/.gitignore	(date 1713130712800)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
Index: .idea/GamaInsertPro.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/GamaInsertPro.iml b/.idea/GamaInsertPro.iml
new file mode 100644
--- /dev/null	(date 1713131491727)
+++ b/.idea/GamaInsertPro.iml	(date 1713131491727)
@@ -0,0 +1,140 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="WEB_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" packagePrefix="App\" />
+      <sourceFolder url="file://$MODULE_DIR$/tests" isTestSource="true" packagePrefix="App\Tests\" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/composer" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/doctrine/cache" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/doctrine/collections" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/doctrine/dbal" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/doctrine/deprecations" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/doctrine/doctrine-bundle" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/doctrine/doctrine-migrations-bundle" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/doctrine/event-manager" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/doctrine/inflector" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/doctrine/instantiator" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/doctrine/lexer" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/doctrine/migrations" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/doctrine/orm" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/doctrine/persistence" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/doctrine/sql-formatter" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/egulias/email-validator" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/masterminds/html5" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/monolog/monolog" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/myclabs/deep-copy" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/nikic/php-parser" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/phar-io/manifest" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/phar-io/version" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/phpdocumentor/reflection-common" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/phpdocumentor/reflection-docblock" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/phpdocumentor/type-resolver" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/phpstan/phpdoc-parser" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/phpunit/php-code-coverage" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/phpunit/php-file-iterator" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/phpunit/php-invoker" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/phpunit/php-text-template" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/phpunit/php-timer" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/phpunit/phpunit" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/psr/cache" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/psr/clock" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/psr/container" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/psr/event-dispatcher" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/psr/link" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/psr/log" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/sebastian/cli-parser" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/sebastian/code-unit" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/sebastian/code-unit-reverse-lookup" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/sebastian/comparator" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/sebastian/complexity" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/sebastian/diff" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/sebastian/environment" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/sebastian/exporter" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/sebastian/global-state" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/sebastian/lines-of-code" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/sebastian/object-enumerator" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/sebastian/object-reflector" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/sebastian/recursion-context" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/sebastian/resource-operations" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/sebastian/type" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/sebastian/version" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/asset" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/asset-mapper" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/browser-kit" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/cache" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/cache-contracts" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/clock" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/config" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/console" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/css-selector" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/debug-bundle" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/dependency-injection" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/deprecation-contracts" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/doctrine-bridge" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/doctrine-messenger" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/dom-crawler" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/dotenv" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/error-handler" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/event-dispatcher" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/event-dispatcher-contracts" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/expression-language" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/filesystem" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/finder" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/flex" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/form" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/framework-bundle" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/http-client" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/http-client-contracts" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/http-foundation" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/http-kernel" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/intl" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/mailer" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/maker-bundle" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/messenger" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/mime" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/monolog-bridge" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/monolog-bundle" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/notifier" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/options-resolver" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/password-hasher" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/phpunit-bridge" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/polyfill-intl-grapheme" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/polyfill-intl-icu" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/polyfill-intl-idn" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/polyfill-intl-normalizer" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/polyfill-mbstring" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/polyfill-php83" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/process" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/property-access" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/property-info" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/routing" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/runtime" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/security-bundle" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/security-core" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/security-csrf" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/security-http" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/serializer" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/service-contracts" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/stimulus-bundle" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/stopwatch" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/string" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/translation" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/translation-contracts" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/twig-bridge" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/twig-bundle" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/ux-turbo" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/validator" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/var-dumper" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/var-exporter" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/web-link" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/web-profiler-bundle" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/yaml" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/theseer/tokenizer" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/twig/extra-bundle" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/twig/twig" />
+      <excludeFolder url="file://$MODULE_DIR$/vendor/webmozart/assert" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1713130731689)
+++ b/.idea/modules.xml	(date 1713130731689)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/GamaInsertPro.iml" filepath="$PROJECT_DIR$/.idea/GamaInsertPro.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/php.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/php.xml b/.idea/php.xml
new file mode 100644
--- /dev/null	(date 1713131420172)
+++ b/.idea/php.xml	(date 1713131420172)
@@ -0,0 +1,158 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="MessDetectorOptionsConfiguration">
+    <option name="transferred" value="true" />
+  </component>
+  <component name="PHPCSFixerOptionsConfiguration">
+    <option name="transferred" value="true" />
+  </component>
+  <component name="PHPCodeSnifferOptionsConfiguration">
+    <option name="highlightLevel" value="WARNING" />
+    <option name="transferred" value="true" />
+  </component>
+  <component name="PhpIncludePathManager">
+    <include_path>
+      <path value="$PROJECT_DIR$/vendor/egulias/email-validator" />
+      <path value="$PROJECT_DIR$/vendor/theseer/tokenizer" />
+      <path value="$PROJECT_DIR$/vendor/phar-io/version" />
+      <path value="$PROJECT_DIR$/vendor/phar-io/manifest" />
+      <path value="$PROJECT_DIR$/vendor/composer" />
+      <path value="$PROJECT_DIR$/vendor/doctrine/lexer" />
+      <path value="$PROJECT_DIR$/vendor/doctrine/deprecations" />
+      <path value="$PROJECT_DIR$/vendor/doctrine/event-manager" />
+      <path value="$PROJECT_DIR$/vendor/doctrine/instantiator" />
+      <path value="$PROJECT_DIR$/vendor/doctrine/dbal" />
+      <path value="$PROJECT_DIR$/vendor/doctrine/cache" />
+      <path value="$PROJECT_DIR$/vendor/doctrine/orm" />
+      <path value="$PROJECT_DIR$/vendor/doctrine/doctrine-bundle" />
+      <path value="$PROJECT_DIR$/vendor/doctrine/collections" />
+      <path value="$PROJECT_DIR$/vendor/doctrine/persistence" />
+      <path value="$PROJECT_DIR$/vendor/doctrine/sql-formatter" />
+      <path value="$PROJECT_DIR$/vendor/doctrine/inflector" />
+      <path value="$PROJECT_DIR$/vendor/doctrine/migrations" />
+      <path value="$PROJECT_DIR$/vendor/doctrine/doctrine-migrations-bundle" />
+      <path value="$PROJECT_DIR$/vendor/symfony/cache-contracts" />
+      <path value="$PROJECT_DIR$/vendor/symfony/clock" />
+      <path value="$PROJECT_DIR$/vendor/symfony/deprecation-contracts" />
+      <path value="$PROJECT_DIR$/vendor/symfony/runtime" />
+      <path value="$PROJECT_DIR$/vendor/symfony/asset-mapper" />
+      <path value="$PROJECT_DIR$/vendor/symfony/form" />
+      <path value="$PROJECT_DIR$/vendor/symfony/cache" />
+      <path value="$PROJECT_DIR$/vendor/symfony/monolog-bundle" />
+      <path value="$PROJECT_DIR$/vendor/symfony/polyfill-intl-grapheme" />
+      <path value="$PROJECT_DIR$/vendor/symfony/css-selector" />
+      <path value="$PROJECT_DIR$/vendor/symfony/var-exporter" />
+      <path value="$PROJECT_DIR$/vendor/symfony/security-core" />
+      <path value="$PROJECT_DIR$/vendor/symfony/property-info" />
+      <path value="$PROJECT_DIR$/vendor/symfony/property-access" />
+      <path value="$PROJECT_DIR$/vendor/symfony/event-dispatcher-contracts" />
+      <path value="$PROJECT_DIR$/vendor/symfony/password-hasher" />
+      <path value="$PROJECT_DIR$/vendor/symfony/security-csrf" />
+      <path value="$PROJECT_DIR$/vendor/symfony/stopwatch" />
+      <path value="$PROJECT_DIR$/vendor/symfony/flex" />
+      <path value="$PROJECT_DIR$/vendor/symfony/options-resolver" />
+      <path value="$PROJECT_DIR$/vendor/symfony/event-dispatcher" />
+      <path value="$PROJECT_DIR$/vendor/symfony/var-dumper" />
+      <path value="$PROJECT_DIR$/vendor/symfony/http-foundation" />
+      <path value="$PROJECT_DIR$/vendor/symfony/framework-bundle" />
+      <path value="$PROJECT_DIR$/vendor/symfony/translation-contracts" />
+      <path value="$PROJECT_DIR$/vendor/symfony/dom-crawler" />
+      <path value="$PROJECT_DIR$/vendor/symfony/validator" />
+      <path value="$PROJECT_DIR$/vendor/symfony/service-contracts" />
+      <path value="$PROJECT_DIR$/vendor/symfony/security-bundle" />
+      <path value="$PROJECT_DIR$/vendor/symfony/translation" />
+      <path value="$PROJECT_DIR$/vendor/symfony/web-link" />
+      <path value="$PROJECT_DIR$/vendor/monolog/monolog" />
+      <path value="$PROJECT_DIR$/vendor/symfony/stimulus-bundle" />
+      <path value="$PROJECT_DIR$/vendor/symfony/finder" />
+      <path value="$PROJECT_DIR$/vendor/symfony/intl" />
+      <path value="$PROJECT_DIR$/vendor/symfony/routing" />
+      <path value="$PROJECT_DIR$/vendor/symfony/http-client-contracts" />
+      <path value="$PROJECT_DIR$/vendor/symfony/http-client" />
+      <path value="$PROJECT_DIR$/vendor/symfony/polyfill-php83" />
+      <path value="$PROJECT_DIR$/vendor/symfony/monolog-bridge" />
+      <path value="$PROJECT_DIR$/vendor/symfony/doctrine-bridge" />
+      <path value="$PROJECT_DIR$/vendor/symfony/polyfill-intl-normalizer" />
+      <path value="$PROJECT_DIR$/vendor/symfony/dependency-injection" />
+      <path value="$PROJECT_DIR$/vendor/symfony/phpunit-bridge" />
+      <path value="$PROJECT_DIR$/vendor/symfony/config" />
+      <path value="$PROJECT_DIR$/vendor/symfony/mime" />
+      <path value="$PROJECT_DIR$/vendor/symfony/mailer" />
+      <path value="$PROJECT_DIR$/vendor/symfony/security-http" />
+      <path value="$PROJECT_DIR$/vendor/symfony/debug-bundle" />
+      <path value="$PROJECT_DIR$/vendor/symfony/error-handler" />
+      <path value="$PROJECT_DIR$/vendor/symfony/filesystem" />
+      <path value="$PROJECT_DIR$/vendor/symfony/twig-bundle" />
+      <path value="$PROJECT_DIR$/vendor/symfony/polyfill-intl-idn" />
+      <path value="$PROJECT_DIR$/vendor/symfony/web-profiler-bundle" />
+      <path value="$PROJECT_DIR$/vendor/symfony/doctrine-messenger" />
+      <path value="$PROJECT_DIR$/vendor/symfony/maker-bundle" />
+      <path value="$PROJECT_DIR$/vendor/symfony/console" />
+      <path value="$PROJECT_DIR$/vendor/symfony/http-kernel" />
+      <path value="$PROJECT_DIR$/vendor/symfony/browser-kit" />
+      <path value="$PROJECT_DIR$/vendor/symfony/messenger" />
+      <path value="$PROJECT_DIR$/vendor/symfony/notifier" />
+      <path value="$PROJECT_DIR$/vendor/phpstan/phpdoc-parser" />
+      <path value="$PROJECT_DIR$/vendor/symfony/ux-turbo" />
+      <path value="$PROJECT_DIR$/vendor/symfony/polyfill-intl-icu" />
+      <path value="$PROJECT_DIR$/vendor/symfony/string" />
+      <path value="$PROJECT_DIR$/vendor/symfony/serializer" />
+      <path value="$PROJECT_DIR$/vendor/symfony/twig-bridge" />
+      <path value="$PROJECT_DIR$/vendor/symfony/yaml" />
+      <path value="$PROJECT_DIR$/vendor/symfony/polyfill-mbstring" />
+      <path value="$PROJECT_DIR$/vendor/symfony/process" />
+      <path value="$PROJECT_DIR$/vendor/symfony/asset" />
+      <path value="$PROJECT_DIR$/vendor/symfony/dotenv" />
+      <path value="$PROJECT_DIR$/vendor/symfony/expression-language" />
+      <path value="$PROJECT_DIR$/vendor/webmozart/assert" />
+      <path value="$PROJECT_DIR$/vendor/psr/clock" />
+      <path value="$PROJECT_DIR$/vendor/psr/link" />
+      <path value="$PROJECT_DIR$/vendor/psr/event-dispatcher" />
+      <path value="$PROJECT_DIR$/vendor/masterminds/html5" />
+      <path value="$PROJECT_DIR$/vendor/psr/cache" />
+      <path value="$PROJECT_DIR$/vendor/psr/log" />
+      <path value="$PROJECT_DIR$/vendor/psr/container" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/type" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/diff" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/lines-of-code" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/object-enumerator" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/comparator" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/code-unit" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/exporter" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/cli-parser" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/version" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/complexity" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/recursion-context" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/resource-operations" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/environment" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/global-state" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/code-unit-reverse-lookup" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/object-reflector" />
+      <path value="$PROJECT_DIR$/vendor/nikic/php-parser" />
+      <path value="$PROJECT_DIR$/vendor/phpdocumentor/reflection-docblock" />
+      <path value="$PROJECT_DIR$/vendor/phpunit/php-code-coverage" />
+      <path value="$PROJECT_DIR$/vendor/phpdocumentor/type-resolver" />
+      <path value="$PROJECT_DIR$/vendor/phpunit/php-file-iterator" />
+      <path value="$PROJECT_DIR$/vendor/phpdocumentor/reflection-common" />
+      <path value="$PROJECT_DIR$/vendor/phpunit/php-invoker" />
+      <path value="$PROJECT_DIR$/vendor/phpunit/php-text-template" />
+      <path value="$PROJECT_DIR$/vendor/phpunit/phpunit" />
+      <path value="$PROJECT_DIR$/vendor/phpunit/php-timer" />
+      <path value="$PROJECT_DIR$/vendor/myclabs/deep-copy" />
+      <path value="$PROJECT_DIR$/vendor/twig/twig" />
+      <path value="$PROJECT_DIR$/vendor/twig/extra-bundle" />
+    </include_path>
+  </component>
+  <component name="PhpProjectSharedConfiguration" php_language_level="8.1" />
+  <component name="PhpStanOptionsConfiguration">
+    <option name="transferred" value="true" />
+  </component>
+  <component name="PhpUnit">
+    <phpunit_settings>
+      <PhpUnitSettings configuration_file_path="$PROJECT_DIR$/phpunit.xml.dist" custom_loader_path="$PROJECT_DIR$/vendor/autoload.php" use_configuration_file="true" />
+    </phpunit_settings>
+  </component>
+  <component name="PsalmOptionsConfiguration">
+    <option name="transferred" value="true" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1713130731714)
+++ b/.idea/vcs.xml	(date 1713130731714)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: src/Entity/OffreEmploi.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Entity/OffreEmploi.php b/src/Entity/OffreEmploi.php
new file mode 100644
--- /dev/null	(date 1713013038365)
+++ b/src/Entity/OffreEmploi.php	(date 1713013038365)
@@ -0,0 +1,157 @@
+<?php
+
+namespace App\Entity;
+
+use App\Repository\OffreRepository;
+use Doctrine\DBAL\Types\Types;
+use Doctrine\ORM\Mapping as ORM;
+
+#[ORM\Entity(repositoryClass: OffreRepository::class)]
+class Offre
+{
+    #[ORM\Id]
+    #[ORM\GeneratedValue]
+    #[ORM\Column]
+    private ?int $id = null;
+
+    #[ORM\Column(length: 255)]
+    private ?string $nomEntreprise = null;
+
+    #[ORM\Column(length: 255)]
+    private ?string $nomOffre = null;
+
+    #[ORM\Column(length: 255)]
+    private ?string $Description = null;
+
+    #[ORM\Column(length: 100, nullable: true)]
+    private ?string $email = null;
+
+    #[ORM\Column(length: 100)]
+    private ?string $telephone = null;
+
+    #[ORM\Column(type: Types::DATE_MUTABLE)]
+    private ?\DateTimeInterface $dateDebut = null;
+
+    #[ORM\Column(type: Types::DATE_MUTABLE)]
+    private ?\DateTimeInterface $dateLimite = null;
+
+    #[ORM\OneToOne(cascade: ['persist', 'remove'])]
+    #[ORM\JoinColumn(nullable: false)]
+    private ?TypeOffre $fk_typeOffre = null;
+
+    #[ORM\Column(length: 255, nullable: true)]
+    private ?string $image = null;
+
+    public function getId(): ?int
+    {
+        return $this->id;
+    }
+
+    public function getNomEntreprise(): ?string
+    {
+        return $this->nomEntreprise;
+    }
+
+    public function setNomEntreprise(string $nomEntreprise): static
+    {
+        $this->nomEntreprise = $nomEntreprise;
+
+        return $this;
+    }
+
+    public function getNomOffre(): ?string
+    {
+        return $this->nomOffre;
+    }
+
+    public function setNomOffre(string $nomOffre): static
+    {
+        $this->nomOffre = $nomOffre;
+
+        return $this;
+    }
+
+    public function getDescription(): ?string
+    {
+        return $this->Description;
+    }
+
+    public function setDescription(string $Description): static
+    {
+        $this->Description = $Description;
+
+        return $this;
+    }
+
+    public function getEmail(): ?string
+    {
+        return $this->email;
+    }
+
+    public function setEmail(?string $email): static
+    {
+        $this->email = $email;
+
+        return $this;
+    }
+
+    public function getTelephone(): ?string
+    {
+        return $this->telephone;
+    }
+
+    public function setTelephone(string $telephone): static
+    {
+        $this->telephone = $telephone;
+
+        return $this;
+    }
+
+    public function getDateDebut(): ?\DateTimeInterface
+    {
+        return $this->dateDebut;
+    }
+
+    public function setDateDebut(\DateTimeInterface $dateDebut): static
+    {
+        $this->dateDebut = $dateDebut;
+
+        return $this;
+    }
+
+    public function getDateLimite(): ?\DateTimeInterface
+    {
+        return $this->dateLimite;
+    }
+
+    public function setDateLimite(\DateTimeInterface $dateLimite): static
+    {
+        $this->dateLimite = $dateLimite;
+
+        return $this;
+    }
+
+    public function getFkTypeOffre(): ?TypeOffre
+    {
+        return $this->fk_typeOffre;
+    }
+
+    public function setFkTypeOffre(TypeOffre $fk_typeOffre): static
+    {
+        $this->fk_typeOffre = $fk_typeOffre;
+
+        return $this;
+    }
+
+    public function getImage(): ?string
+    {
+        return $this->image;
+    }
+
+    public function setImage(?string $image): static
+    {
+        $this->image = $image;
+
+        return $this;
+    }
+}
Index: src/Service/InsertionProfessionnelle/OffreEmploiNotificationService.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Service/InsertionProfessionnelle/OffreEmploiNotificationService.php b/src/Service/InsertionProfessionnelle/OffreEmploiNotificationService.php
new file mode 100644
--- /dev/null	(date 1713131886891)
+++ b/src/Service/InsertionProfessionnelle/OffreEmploiNotificationService.php	(date 1713131886891)
@@ -0,0 +1,33 @@
+<?php
+
+namespace App\Service\InsertionProfessionnelle;
+
+use App\Entity\OffreEmploi;
+use App\Repository\EtudiantRepository;
+use Symfony\Component\Mailer\MailerInterface;
+use Symfony\Component\Mime\Email;
+
+class OffreEmploiNotificationService
+{
+    private $mailer;
+    private $etudiantRepository;
+
+    public function __construct(MailerInterface $mailer, EtudiantRepository $etudiantRepository)
+    {
+        $this->mailer = $mailer;
+        $this->etudiantRepository = $etudiantRepository;
+    }
+
+    public function notify(OffreEmploi $offreEmploi)
+    {
+        $etudiants = $this->etudiantRepository->findAll();
+        foreach ($etudiants as $etudiant) {
+            $email = (new Email())
+                ->from('Votre@email.com')
+                ->to($etudiant->getEmail())
+                ->subject('Nouvelle offre d\'emploi')
+                ->text('Une nouvelle offre d\'emploi est disponible : ' . $offreEmploi->getTitre());
+            $this->mailer->send($email);
+        }
+    }
+}
\ No newline at end of file
Index: src/Form/OffreEmploiType.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Form/OffreEmploiType.php b/src/Form/OffreEmploiType.php
new file mode 100644
--- /dev/null	(date 1713013038365)
+++ b/src/Form/OffreEmploiType.php	(date 1713013038365)
@@ -0,0 +1,42 @@
+<?php
+
+namespace App\Form;
+
+use App\Entity\Offre;
+use App\Entity\TypeOffre;
+use Symfony\Bridge\Doctrine\Form\Type\EntityType;
+use Symfony\Component\Form\AbstractType;
+use Symfony\Component\Form\FormBuilderInterface;
+use Symfony\Component\OptionsResolver\OptionsResolver;
+
+class OffreType extends AbstractType
+{
+    public function buildForm(FormBuilderInterface $builder, array $options): void
+    {
+        $builder
+            ->add('nomEntreprise')
+            ->add('nomOffre')
+            ->add('Description')
+            ->add('email')
+            ->add('telephone')
+            ->add('dateDebut', null, [
+                'widget' => 'single_text',
+            ])
+            ->add('dateLimite', null, [
+                'widget' => 'single_text',
+            ])
+            ->add('image')
+            ->add('fk_typeOffre', EntityType::class, [
+                'class' => TypeOffre::class,
+                'choice_label' => 'id',
+            ])
+        ;
+    }
+
+    public function configureOptions(OptionsResolver $resolver): void
+    {
+        $resolver->setDefaults([
+            'data_class' => Offre::class,
+        ]);
+    }
+}
Index: src/Controller/InsertionProfessionnelle/OffreEmploiController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Controller/InsertionProfessionnelle/OffreEmploiController.php b/src/Controller/InsertionProfessionnelle/OffreEmploiController.php
new file mode 100644
--- /dev/null	(date 1713132304904)
+++ b/src/Controller/InsertionProfessionnelle/OffreEmploiController.php	(date 1713132304904)
@@ -0,0 +1,85 @@
+<?php
+
+namespace App\Controller\InsertionProfessionnelle;
+
+use App\Entity\Offre;
+use App\Form\OffreType;
+use App\Repository\OffreRepository;
+use App\Service\InsertionProfessionnelle\OffreEmploiNotificationService;
+use Doctrine\ORM\EntityManagerInterface;
+use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
+use Symfony\Component\HttpFoundation\Request;
+use Symfony\Component\HttpFoundation\Response;
+use Symfony\Component\Routing\Attribute\Route;
+
+#[Route('/offre')]
+class OffreEmploiController extends AbstractController
+{
+    #[Route('/', name: 'app_offre_index', methods: ['GET'])]
+    public function index(OffreRepository $offreRepository): Response
+    {
+        return $this->render('offre/index.html.twig', [
+            'offres' => $offreRepository->findAll(),
+        ]);
+    }
+
+    #[Route('/new', name: 'app_offre_new', methods: ['GET', 'POST'])]
+    public function new(Request $request, EntityManagerInterface $entityManager, OffreEmploiNotificationService $notificationService): Response
+    {
+        $offre = new Offre();
+        $form = $this->createForm(OffreType::class, $offre);
+        $form->handleRequest($request);
+
+        if ($form->isSubmitted() && $form->isValid()) {
+            $entityManager->persist($offre);
+            $entityManager->flush();
+
+            // Après avoir persisté la nouvelle offre, notifier les étudiants concernés
+            $notificationService->notifierEtudiants($offre);
+
+            return $this->redirectToRoute('app_offre_index', [], Response::HTTP_SEE_OTHER);
+        }
+
+        return $this->render('offre/new.html.twig', [
+            'offre' => $offre,
+            'form' => $form,
+        ]);
+    }
+
+    #[Route('/{id}', name: 'app_offre_show', methods: ['GET'])]
+    public function show(Offre $offre): Response
+    {
+        return $this->render('offre/show.html.twig', [
+            'offre' => $offre,
+        ]);
+    }
+
+    #[Route('/{id}/edit', name: 'app_offre_edit', methods: ['GET', 'POST'])]
+    public function edit(Request $request, Offre $offre, EntityManagerInterface $entityManager): Response
+    {
+        $form = $this->createForm(OffreType::class, $offre);
+        $form->handleRequest($request);
+
+        if ($form->isSubmitted() && $form->isValid()) {
+            $entityManager->flush();
+
+            return $this->redirectToRoute('app_offre_index', [], Response::HTTP_SEE_OTHER);
+        }
+
+        return $this->render('offre/edit.html.twig', [
+            'offre' => $offre,
+            'form' => $form,
+        ]);
+    }
+
+    #[Route('/{id}', name: 'app_offre_delete', methods: ['POST'])]
+    public function delete(Request $request, Offre $offre, EntityManagerInterface $entityManager): Response
+    {
+        if ($this->isCsrfTokenValid('delete'.$offre->getId(), $request->getPayload()->get('_token'))) {
+            $entityManager->remove($offre);
+            $entityManager->flush();
+        }
+
+        return $this->redirectToRoute('app_offre_index', [], Response::HTTP_SEE_OTHER);
+    }
+}
Index: src/Repository/OffreEmploiRepository.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Repository/OffreEmploiRepository.php b/src/Repository/OffreEmploiRepository.php
new file mode 100644
--- /dev/null	(date 1713013038365)
+++ b/src/Repository/OffreEmploiRepository.php	(date 1713013038365)
@@ -0,0 +1,48 @@
+<?php
+
+namespace App\Repository;
+
+use App\Entity\Offre;
+use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
+use Doctrine\Persistence\ManagerRegistry;
+
+/**
+ * @extends ServiceEntityRepository<Offre>
+ *
+ * @method Offre|null find($id, $lockMode = null, $lockVersion = null)
+ * @method Offre|null findOneBy(array $criteria, array $orderBy = null)
+ * @method Offre[]    findAll()
+ * @method Offre[]    findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
+ */
+class OffreRepository extends ServiceEntityRepository
+{
+    public function __construct(ManagerRegistry $registry)
+    {
+        parent::__construct($registry, Offre::class);
+    }
+
+    //    /**
+    //     * @return Offre[] Returns an array of Offre objects
+    //     */
+    //    public function findByExampleField($value): array
+    //    {
+    //        return $this->createQueryBuilder('o')
+    //            ->andWhere('o.exampleField = :val')
+    //            ->setParameter('val', $value)
+    //            ->orderBy('o.id', 'ASC')
+    //            ->setMaxResults(10)
+    //            ->getQuery()
+    //            ->getResult()
+    //        ;
+    //    }
+
+    //    public function findOneBySomeField($value): ?Offre
+    //    {
+    //        return $this->createQueryBuilder('o')
+    //            ->andWhere('o.exampleField = :val')
+    //            ->setParameter('val', $value)
+    //            ->getQuery()
+    //            ->getOneOrNullResult()
+    //        ;
+    //    }
+}
Index: src/Controller/LoginController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Controller/LoginController.php b/src/Controller/LoginController.php
new file mode 100644
--- /dev/null	(date 1713135198737)
+++ b/src/Controller/LoginController.php	(date 1713135198737)
@@ -0,0 +1,20 @@
+<?php
+// src/Controller/LoginController.php
+
+namespace App\Controller;
+
+use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
+use Symfony\Component\HttpFoundation\Response;
+use Symfony\Component\Routing\Annotation\Route;
+
+class LoginController extends AbstractController
+{
+    #[Route('/login', name: 'app_login')]
+    public function login(): Response
+    {
+        // Ici, vous pouvez renvoyer le rendu de votre page de connexion
+        return $this->render('login/index.html.twig');
+    }
+}
+
+
Index: templates/login/index.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/login/index.html.twig b/templates/login/index.html.twig
new file mode 100644
--- /dev/null	(date 1713135379197)
+++ b/templates/login/index.html.twig	(date 1713135379197)
@@ -0,0 +1,23 @@
+{# templates/login/index.html.twig #}
+
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>Login</title>
+</head>
+<body>
+<h1>Login</h1>
+
+<form action="{{ path('app_login') }}" method="post">
+    <label for="username">Username:</label>
+    <input type="text" id="username" name="_username" required>
+
+    <label for="password">Password:</label>
+    <input type="password" id="password" name="_password" required>
+
+    <button type="submit">Login</button>
+</form>
+</body>
+</html>
Index: templates/accueil/index.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends 'app_base.html.twig' %}\r\n\r\n    {% block title %}\r\n        GamalInsertPro\r\n    {% endblock %}\r\n\r\n\r\n    {% block containt %}\r\n\r\n       {# Carousel #}\r\n       {% include 'accueil/_partials/carousel.html.twig' %}\r\n\r\n    <!-- Section Statistiques en chiffres-->\r\n       {% include 'accueil/_partials/statistiques.html.twig' %}\r\n    <!-- Facts Start -->\r\n\r\n\r\n    <!--Section Apropos -->\r\n       {% include 'accueil/_partials/apropos.html.twig' %}\r\n\r\n    <!-- Section Caractéristiques -->\r\n       {% include 'accueil/_partials/caracteristiques.html.twig' %}\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n    <!-- Section Contact -->\r\n   {% include 'accueil/_partials/contact.html.twig' %}\r\n   \r\n\r\n\r\n    <!-- section temoignages -->\r\n   {% include 'accueil/_partials/temoignages.html.twig' %}\r\n\r\n\r\n\r\n    <!-- section de L'Equipe de la cellule d'insertion professionnelle -->\r\n   {% include 'accueil/_partials/membres_cellule.html.twig' %}\r\n   \r\n\r\n\r\n\r\n\r\n    <!-- Section des partenaires -->\r\n   {% include 'accueil/_partials/partenaires.html.twig' %}\r\n\r\n    \r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/accueil/index.html.twig b/templates/accueil/index.html.twig
--- a/templates/accueil/index.html.twig	(revision 84060ddc08e4bc1a179f1b8cde5b6d3e4fb9e2ae)
+++ b/templates/accueil/index.html.twig	(date 1713133687818)
@@ -1,51 +1,38 @@
 {% extends 'app_base.html.twig' %}
 
-    {% block title %}
-        GamalInsertPro
-    {% endblock %}
+{% block title %}
+    GamalInsertPro
+{% endblock %}
 
-
-    {% block containt %}
+{% block containt %}
 
-       {# Carousel #}
-       {% include 'accueil/_partials/carousel.html.twig' %}
+    {# Carousel #}
+    {% include 'accueil/_partials/carousel.html.twig' %}
 
     <!-- Section Statistiques en chiffres-->
-       {% include 'accueil/_partials/statistiques.html.twig' %}
+    {% include 'accueil/_partials/statistiques.html.twig' %}
     <!-- Facts Start -->
 
 
     <!--Section Apropos -->
-       {% include 'accueil/_partials/apropos.html.twig' %}
+    {% include 'accueil/_partials/apropos.html.twig' %}
 
     <!-- Section Caractéristiques -->
-       {% include 'accueil/_partials/caracteristiques.html.twig' %}
-    
+    {% include 'accueil/_partials/caracteristiques.html.twig' %}
 
-
-
-
-
-
     <!-- Section Contact -->
-   {% include 'accueil/_partials/contact.html.twig' %}
-   
+    {% include 'accueil/_partials/contact.html.twig' %}
 
-
     <!-- section temoignages -->
-   {% include 'accueil/_partials/temoignages.html.twig' %}
+    {% include 'accueil/_partials/temoignages.html.twig' %}
 
-
-
     <!-- section de L'Equipe de la cellule d'insertion professionnelle -->
-   {% include 'accueil/_partials/membres_cellule.html.twig' %}
-   
+    {% include 'accueil/_partials/membres_cellule.html.twig' %}
 
-
-
-
     <!-- Section des partenaires -->
-   {% include 'accueil/_partials/partenaires.html.twig' %}
+    {% include 'accueil/_partials/partenaires.html.twig' %}
 
-    
-{% endblock %}
+    <!-- Ajoutez un lien vers la page de connexion -->
+    <a href="{{ path('app_login') }}">Connexion</a>
+
+{% endblock %}
\ No newline at end of file
